<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFrameworks>net7.0;net6.0;net5.0;netcoreapp3.1;</TargetFrameworks>
		<AssemblyName>Architect.Identities</AssemblyName>
		<RootNamespace>Architect.Identities</RootNamespace>
		<Nullable>Enable</Nullable>
		<LangVersion>10</LangVersion>
		<GenerateDocumentationFile>True</GenerateDocumentationFile>
		<IsTrimmable>True</IsTrimmable>
	</PropertyGroup>

	<PropertyGroup>
		<VersionPrefix>2.0.0</VersionPrefix>
		<Description>
Reliable unique ID generation and management for distributed applications.

Auto-increment IDs reveal sensitive information. UUIDs (also known as GUIDs) are inefficient as primary keys in a database. Having two different IDs is cumbersome and counterintuitive. We can do better.

- For a 93-bit UUID replacement that is efficient as a primary key, use the DistributedId.
- For a 128-bit 128-bit UUID replacement with the advantages of the DistributedId and practically no rate limits or collisions, at the cost of more space, use the DistributedId128.
- To expose IDs externally in a sensitive environment where zero metadata must be leaked, transform them with PublicIdentities.

https://github.com/TheArchitectDev/Architect.Identities

Release notes:

2.1.0:
- Semi-breaking: IPublicIdentityConverter now features additional methods, although the type is generally not user-implemented.
- Semi-breaking: HexadecimalIdEncoder's char-based parameters have been renamed from "bytes" to "chars".
- Added DistributedId128, a 128-bit (Guid/UInt128) DistributedId variant with practically no rate limits or collisions that also doubles as a version-7 UUID.
- Added encoding methods for UInt128.
- Added extension methods to transcode between UInt128 and Guid.
- Added public identity conversions for UInt128 and Guid.
- The ConfigureDecimalIdTypes() extension method now truncates needless trailing zeros received from the provider (`123.0` => `123`), as happens with SQLite.

2.0.0:
- BREAKING: Removed Fluid. Ambient scopes with startup configuration are now considered undesirable.
- BREAKING: Removed ApplicationInstanceId. Ambient scopes with startup configuration are now considered undesirable.
- BREAKING: Removed ambient access to IPublicIdentityConverter. Ambient scopes with startup configuration are now considered undesirable.
- BREAKING: IdEncoder has been reworked into BinaryIdEncoder, AphanumericIdEncoder, and HexadecimalIdEncoder.
- BREAKING: ID decoding methods now throw if the input is too long. This is specially relevant for strings (such as query parameters) where 0123456789123456 and 0123456789123456aaaa should not produce the same ID.
- BREAKING: IPublicIdentityConverter now throws on big-endian architectures, instead of risking silent portability issues between architectures.
- BREAKING: Now using AmbientContexts 2.0.0.
- Semi-breaking: DistributedIds are now always 28 digits, to avoid a change from 27 to 28 digits in the future. Newly generated IDs will be significantly greater than before. Avoid downgrading after upgrading.
- DistributedIds can now burst-generate ~128,000 IDs at once before the ~128 IDs per millisecond throttling kicks in. This makes throttling much less likely to be encountered.
- DistributedId now stays incremental even under clock adjustments of up to 1 second. (Note that the UTC clock remains unaffected by DST.)
- Hexadecimal ID encodings are now supported.
- IPublicIdentityConverter now comes with a TestPublicIdentityConverter implementation for unit tests.
- Added UnsupportedOSPlatform("browser") to PublicIdentities, due to continuing lack of AES support.

1.0.2:
- Now using AmbientContexts 1.1.1, which fixes extremely rare bugs and improves performance.

1.0.1:
- Now using AmbientContexts 1.1.0, for a performance improvement.
		</Description>
		<Copyright>The Architect</Copyright>
		<Company>The Architect</Company>
		<Authors>TheArchitectDev, Timovzl</Authors>
		<RepositoryUrl>https://github.com/TheArchitectDev/Architect.Identities</RepositoryUrl>
		<RepositoryType>Git</RepositoryType>
		<PackageLicenseFile>LICENSE</PackageLicenseFile>
		<PackageTags>ID, IDs, identity, identities, DistributedId, distributed, locally, unique, locally-unique, generator, generation, IdGenerator, UUID, GUID, auto-increment, primary, key, entity, entities, PublicIdentities</PackageTags>
	</PropertyGroup>

	<ItemGroup>
		<None Include="..\LICENSE">
			<Pack>True</Pack>
			<PackagePath></PackagePath>
		</None>
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="Architect.AmbientContexts" Version="2.0.0-*" />
		<PackageReference Include="Microsoft.AspNetCore.Http.Abstractions" Version="2.2.0" />
		<PackageReference Include="Microsoft.Extensions.DependencyInjection.Abstractions" Version="3.1.0" />
		<PackageReference Include="Microsoft.Extensions.Hosting.Abstractions" Version="3.1.0" />
	</ItemGroup>

</Project>
