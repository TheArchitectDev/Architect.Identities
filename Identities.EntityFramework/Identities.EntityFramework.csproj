<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFramework>net6.0</TargetFramework>
		<AssemblyName>Architect.Identities.EntityFramework</AssemblyName>
		<RootNamespace>Architect.Identities.EntityFramework</RootNamespace>
		<Nullable>Enable</Nullable>
		<LangVersion>11</LangVersion>
		<GenerateDocumentationFile>True</GenerateDocumentationFile>
		<IsTrimmable>False</IsTrimmable>
	</PropertyGroup>

	<PropertyGroup>
		<InternalsVisibleTo>Architect.Identities.EntityFramework.IntegrationTests</InternalsVisibleTo>
	</PropertyGroup>

	<PropertyGroup>
		<VersionPrefix>2.1.0</VersionPrefix>
		<PackageReleaseNotes></PackageReleaseNotes>
		<Description>
Entity Framework extensions for the Architect.Identities package.

https://github.com/TheArchitectDev/Architect.Identities

Release notes:

2.1.0:
- Semi-breaking: DecimalIdConvention now truncates decimal IDs when they are reconstituted, mainly to counteract the fact that the SQLite provider tends to represent them as 12345.0, i.e. with a one decimal place.

2.0.0:
- BREAKING: Now targeting .NET 6+, to support new EF Core APIs.
- BREAKING: Now using EF Core 7.0.0.
- BREAKING: No longer referencing the Identities package. (The current package is still considered an addition to it, but the hard link is gone.)
- BREAKING: Removed ApplicationInstanceIds. (See Identities 2.0.0.)
- BREAKING: Decimal IDs in SQLite may get reconstituted with a one (inadvertent) decimal place, e.g. "1234567890123456789012345678" =&gt; "1234567890123456789012345678.0". Detecting and fixing for SQLite is a hassle.
- BREAKING: DecimalIdMappingExtensions's methods have been replaced by modelConfigurationBuilder.ConfigureDecimalIdTypes(). This should be called from DbContext.ConfigureConventions().
- The new extension method handles decimal-convertible types (i.e. value objects) in addition to plain decimals.
- The new extension method also sets DefaultTypeMapping, to achieve appropriate behavior when EF writes things like CAST(). Property mappings alone do not cover such scenarios.

1.0.2:
- Fixed an incompatibility with EF Core 6.0.0+ (caused by a breaking change in EF itself).
- Now using AmbientContexts 1.1.1, which fixes extremely rare bugs and improves performance.

1.0.1:
- Now using AmbientContexts 1.1.0, for a performance improvement.
		</Description>
		<Copyright>The Architect</Copyright>
		<Company>The Architect</Company>
		<Authors>TheArchitectDev, Timovzl</Authors>
		<RepositoryUrl>https://github.com/TheArchitectDev/Architect.Identities</RepositoryUrl>
		<RepositoryType>Git</RepositoryType>
		<PackageLicenseFile>LICENSE</PackageLicenseFile>
		<PackageTags>Entity, Framework, EntityFramework, EF, Core, EfCore, ID, IDs, identity, identities, DistributedId, distributed, locally, unique, locally-unique, generator, generation, IdGenerator, UUID, GUID, auto-increment, primary, key, entity, entities, PublicIdentities</PackageTags>
	</PropertyGroup>

	<ItemGroup>
		<None Include="..\LICENSE">
			<Pack>True</Pack>
			<PackagePath></PackagePath>
		</None>
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="Microsoft.EntityFrameworkCore" Version="7.0.0" />
		<PackageReference Include="Microsoft.EntityFrameworkCore.Relational" Version="7.0.0" />
		<PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="7.0.0">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
	</ItemGroup>

</Project>
